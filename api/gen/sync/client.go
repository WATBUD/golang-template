// Code generated by goa v3.16.2, DO NOT EDIT.
//
// Sync client
//
// Command:
// $ goa gen mai.today/api/design

package sync

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Sync" service client.
type Client struct {
	ReceiveSyncEndpoint goa.Endpoint
	SyncEndpoint        goa.Endpoint
}

// NewClient initializes a "Sync" service client given the endpoints.
func NewClient(receiveSync, sync goa.Endpoint) *Client {
	return &Client{
		ReceiveSyncEndpoint: receiveSync,
		SyncEndpoint:        sync,
	}
}

// ReceiveSync calls the "receiveSync" endpoint of the "Sync" service.
// ReceiveSync may return the following errors:
//   - "invalid token" (type *goa.ServiceError): token 無效
//   - error: internal error
func (c *Client) ReceiveSync(ctx context.Context, p *ReceiveSyncPayload) (res *SyncResult, err error) {
	var ires any
	ires, err = c.ReceiveSyncEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SyncResult), nil
}

// Sync calls the "sync" endpoint of the "Sync" service.
// Sync may return the following errors:
//   - "invalid token" (type *goa.ServiceError): token 無效
//   - error: internal error
func (c *Client) Sync(ctx context.Context, p *SyncPayload) (res *SyncResult, err error) {
	var ires any
	ires, err = c.SyncEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SyncResult), nil
}
