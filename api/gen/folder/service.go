// Code generated by goa v3.16.2, DO NOT EDIT.
//
// folder service
//
// Command:
// $ goa gen mai.today/api/design

package folder

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// The folder service provides operations for managing folders.
type Service interface {
	// ReceiveCreateFolder implements receiveCreateFolder.
	ReceiveCreateFolder(context.Context, *ReceiveCreateFolderPayload) (res *CreateFolderResult, err error)
	// CreateFolder implements CreateFolder.
	CreateFolder(context.Context, *CreateFolderPayload) (res *CreateFolderResult, err error)
	// ReceiveDeleteFolder implements receiveDeleteFolder.
	ReceiveDeleteFolder(context.Context, *ReceiveDeleteFolderPayload) (res *DeleteFolderResult, err error)
	// DeleteFolder implements DeleteFolder.
	DeleteFolder(context.Context, *DeleteFolderPayload) (res *DeleteFolderResult, err error)
	// ReceiveUpdateFolder implements receiveUpdateFolder.
	ReceiveUpdateFolder(context.Context, *ReceiveUpdateFolderPayload) (res *UpdateFolderResult, err error)
	// UpdateFolder implements UpdateFolder.
	UpdateFolder(context.Context, *UpdateFolderPayload) (res *UpdateFolderResult, err error)
	// ReceiveListFolders implements receiveListFolders.
	ReceiveListFolders(context.Context, *ReceiveListFoldersPayload) (res *ListFoldersResult, err error)
	// ListFolders implements ListFolders.
	ListFolders(context.Context, *ListFoldersPayload) (res *ListFoldersResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "api"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "folder"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [8]string{"receiveCreateFolder", "CreateFolder", "receiveDeleteFolder", "DeleteFolder", "receiveUpdateFolder", "UpdateFolder", "receiveListFolders", "ListFolders"}

// 指令
type Command struct {
	// 類型
	Type string
}

// CreateFolderPayload is the payload type of the folder service CreateFolder
// method.
type CreateFolderPayload struct {
	JWT    *string
	Folder *Folder
}

// CreateFolderResult is the result type of the folder service
// receiveCreateFolder method.
type CreateFolderResult struct {
	Command *Command
	// 時間戳記
	Timestamp int64
	// 資料
	Data *Createfolderresultdata
}

// Create Folder Result Data
type Createfolderresultdata struct {
	// Folder identifier
	FolderID string
	// Base identifier
	BaseID string
	// Parent identifier
	ParentID string
	// Position of the folder
	Position *float64
	// Time of creation
	CreatedAt string
	// Time of update
	UpdatedAt string
	// Data associated with the folder
	Data *FolderData
	// Type of the folder
	Type string
}

// DeleteFolderPayload is the payload type of the folder service DeleteFolder
// method.
type DeleteFolderPayload struct {
	JWT *string
	// Folder identifier
	FolderID string
}

// DeleteFolderResult is the result type of the folder service
// receiveDeleteFolder method.
type DeleteFolderResult struct {
	Command *Command
	// 時間戳記
	Timestamp int64
	// 資料
	Data *Createfolderresultdata
}

// Folder information.
type Folder struct {
	// Folder identifier
	FolderID string
	// Base identifier
	BaseID string
	// Parent identifier
	ParentID string
	// Position of the folder
	Position *float64
	// Time of creation
	CreatedAt string
	// Time of update
	UpdatedAt string
	// Data associated with the folder
	Data *FolderData
	// Type of the folder
	Type string
}

// Custom folder data.
type FolderData struct {
	// Folder color
	Color string
	// Folder name
	Name string
}

// ListFoldersPayload is the payload type of the folder service ListFolders
// method.
type ListFoldersPayload struct {
	JWT *string
}

// ListFoldersResult is the result type of the folder service
// receiveListFolders method.
type ListFoldersResult struct {
	Command *Command
	// 時間戳記
	Timestamp int64
	// 資料
	Data []*Createfolderresultdata
}

// ReceiveCreateFolderPayload is the payload type of the folder service
// receiveCreateFolder method.
type ReceiveCreateFolderPayload struct {
	JWT *string
	// 使用者識別碼
	Channel string
}

// ReceiveDeleteFolderPayload is the payload type of the folder service
// receiveDeleteFolder method.
type ReceiveDeleteFolderPayload struct {
	JWT *string
	// 使用者識別碼
	Channel string
}

// ReceiveListFoldersPayload is the payload type of the folder service
// receiveListFolders method.
type ReceiveListFoldersPayload struct {
	JWT *string
	// 使用者識別碼
	Channel string
}

// ReceiveUpdateFolderPayload is the payload type of the folder service
// receiveUpdateFolder method.
type ReceiveUpdateFolderPayload struct {
	JWT *string
	// 使用者識別碼
	Channel string
}

// UpdateFolderPayload is the payload type of the folder service UpdateFolder
// method.
type UpdateFolderPayload struct {
	JWT *string
	// Folder identifier
	FolderID string
	// Folder data to update
	Folder *Folder
}

// UpdateFolderResult is the result type of the folder service
// receiveUpdateFolder method.
type UpdateFolderResult struct {
	Command *Command
	// 時間戳記
	Timestamp int64
	// 資料
	Data *Createfolderresultdata
}

// MakeInvalidToken builds a goa.ServiceError from an error.
func MakeInvalidToken(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "invalid token", false, false, false)
}
