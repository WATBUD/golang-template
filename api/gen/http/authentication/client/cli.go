// Code generated by goa v3.16.2, DO NOT EDIT.
//
// authentication HTTP client CLI support package
//
// Command:
// $ goa gen mai.today/api/design

package client

import (
	"encoding/json"
	"fmt"
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
	authentication "mai.today/api/gen/authentication"
)

// BuildSignInPayload builds the payload for the authentication SignIn endpoint
// from CLI flags.
func BuildSignInPayload(authenticationSignInBody string) (*authentication.SignInPayload, error) {
	var err error
	var body SignInRequestBody
	{
		err = json.Unmarshal([]byte(authenticationSignInBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"firebaseIdToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.Et9HFtf9R3GEMA0IICOfFMVXY7kkTX1wr4qCyhIf58U\"\n   }'")
		}
		if utf8.RuneCountInString(body.FirebaseIDToken) < 100 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.firebaseIdToken", body.FirebaseIDToken, utf8.RuneCountInString(body.FirebaseIDToken), 100, true))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &authentication.SignInPayload{
		FirebaseIDToken: body.FirebaseIDToken,
	}

	return v, nil
}
